{"version":3,"sources":["layout/TodoLogin.tsx","views/login/LoginPage.tsx","utils/apiCaller.ts","components/TodoContext.tsx","layout/TodoHead.tsx","components/main/TodoItem.tsx","components/main/TodoList.tsx","components/main/TodoCreate.tsx","views/main/MainPage.tsx","App.tsx","index.tsx"],"names":["React","memo","useState","setId","setPw","className","placeholder","onChange","e","target","value","type","LoginPage","todo","axios","post","text","console","log","GetTodos","get","response","data","put","id","done","delete","TodoStateContext","createContext","TodoDispatchContext","TodoNextIdContext","TodoReducer","state","action","apiCaller","concat","array","filter","map","initialTodos","TodoProvider","children","useReducer","dispatch","nextId","setNextID","nextID","length","useEffect","getItems","Provider","useTodoState","useContext","useTodoDispatch","TodoHead","today","Date","dateString","toLocaleString","year","month","day","dayName","weekday","undoneTasks","Remove","styled","div","TodoItemBlock","CheckCircle","props","css","Text","onClick","TodoList","todos","key","CircleButton","button","open","setOpen","setValue","onSubmit","preventDefault","current","autoFocus","MainPage","GlobalStyle","createGlobalStyle","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.864737e3.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { IoMdLogIn } from \"react-icons/io\";\r\n\r\nfunction TodoLogin() {\r\n  const [id, setId] = useState(\"\");\r\n  const [pw, setPw] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <div className=\"login-head-block\">\r\n        <h1>Login</h1>\r\n      </div>\r\n      <div className=\"login-insert-form\">\r\n        <h2>Id</h2>\r\n        <form className=\"input-id\">\r\n          <input\r\n            className=\"login-input\"\r\n            placeholder=\"Id\"\r\n            onChange={(e) => setId(e.target.value)}\r\n          ></input>\r\n        </form>\r\n        <h2>Password</h2>\r\n        <form className=\"insert-pw\">\r\n          <input\r\n            className=\"login-input\"\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            onChange={(e) => setPw(e.target.value)}\r\n          ></input>\r\n        </form>\r\n      </div>\r\n      <button className=\"login-button\">\r\n        <IoMdLogIn />\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(TodoLogin);\r\n","import React from \"react\";\r\nimport \"./login.scss\";\r\nimport TodoLogin from \"../../layout/TodoLogin\";\r\n\r\nfunction LoginPage() {\r\n  return (\r\n    <div className=\"login-template\">\r\n      <TodoLogin />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","import axios from \"axios\";\r\n\r\nexport async function AddTodos(todo) {\r\n  try {\r\n    return await axios.post(\"/addTodo\", {\r\n      text: todo.text,\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport async function GetTodos() {\r\n  try {\r\n    const response = await axios.get(\"/getTodo\", {});\r\n    return response.data;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport async function ToggleTodos(todo) {\r\n  try {\r\n    return await axios.put(\"/putTodo\", {\r\n      id: todo.id,\r\n      done: todo.done === 1 ? 0 : 1,\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport async function DeleteTodos(todo) {\r\n  try {\r\n    return await axios.delete(\"/deleteTodo\", {\r\n      data: { id: todo.id },\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n","import React, {\r\n  createContext,\r\n  useReducer,\r\n  useContext,\r\n  useState,\r\n  useEffect,\r\n} from \"react\";\r\nimport * as apiCaller from \"../utils/apiCaller\";\r\n\r\nconst TodoStateContext = createContext(null);\r\nconst TodoDispatchContext = createContext(null);\r\nconst TodoNextIdContext = createContext(null);\r\n\r\nfunction TodoReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"CREATE\": {\r\n      apiCaller.AddTodos(action.todo);\r\n      return state.concat(action.todo);\r\n    }\r\n    case \"REPLACE\":\r\n      return action.array;\r\n    case \"TOGGLE\": {\r\n      let id = state.filter((todo) => todo.id === action.id);\r\n      apiCaller.ToggleTodos(id[0]);\r\n      return state.map((todo) =>\r\n        todo.id === action.id ? { ...todo, done: !todo.done } : todo\r\n      );\r\n      // 기본: return state.map(todo => todo.id === action.id ? { ...todo, done: !todo.done } : todo);\r\n    }\r\n    case \"REMOVE\": {\r\n      let id = state.filter((todo) => todo.id === action.id);\r\n      apiCaller.DeleteTodos(id[0]);\r\n      return state.filter((todo) => todo.id !== action.id);\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst initialTodos = [\r\n  {\r\n    id: 1,\r\n    text: \"sample\",\r\n    done: false,\r\n  },\r\n  {\r\n    id: 2,\r\n    text: \"page\",\r\n    done: true,\r\n  },\r\n];\r\n\r\nexport function TodoProvider({ children }) {\r\n  const [state, dispatch] = useReducer(TodoReducer, initialTodos);\r\n  const [nextId, setNextID] = useState(3);\r\n\r\n  useEffect(() => {\r\n    getItems();\r\n  }, []);\r\n\r\n  let data;\r\n\r\n  async function getItems() {\r\n    data = await apiCaller.GetTodos();\r\n    let nextID = data[data.length - 1].id;\r\n    setNextID(nextID + 1);\r\n    dispatch({\r\n      type: \"REPLACE\",\r\n      array: data,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <TodoStateContext.Provider value={state}>\r\n      <TodoDispatchContext.Provider value={dispatch}>\r\n        <TodoNextIdContext.Provider value={nextId}>\r\n          {children}\r\n        </TodoNextIdContext.Provider>\r\n      </TodoDispatchContext.Provider>\r\n    </TodoStateContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useTodoState() {\r\n  return useContext(TodoStateContext);\r\n}\r\n\r\nexport function useTodoDispatch() {\r\n  return useContext(TodoDispatchContext);\r\n}\r\n\r\nexport function useTodoNextId() {\r\n  return useContext(TodoNextIdContext);\r\n}\r\n","import React from \"react\";\nimport { useTodoState } from \"../components/TodoContext\";\n\nfunction TodoHead() {\n  const today = new Date();\n\n  const dateString = today.toLocaleString(\"ko-KR\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n  });\n\n  const dayName = today.toLocaleString(\"ko-KR\", { weekday: \"long\" });\n  const todos = useTodoState();\n  const undoneTasks = todos.filter((todo) => !todo.done);\n\n  return (\n    <div className=\"head-block\">\n      {/* <p>{users.userInfo.userid}</p> */}\n      <h1>{dateString}</h1>\n      <div className=\"day\">{dayName}</div>\n      <div className=\"tasks-left\">할 일 {undoneTasks.length}개 남음</div>\n    </div>\n  );\n}\n\nexport default TodoHead;\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { MdDone, MdDelete } from \"react-icons/md\";\nimport { useTodoDispatch } from \"../TodoContext\";\n\nconst Remove = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #dee2e6;\n  font-size: 24px;\n  cursor: pointer;\n  &:hover {\n    color: #ff6b6b;\n  }\n  display: none;\n`;\n\nconst TodoItemBlock = styled.div`\n  display: flex;\n  align-items: center;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  &:hover {\n    ${Remove} {\n      display: initial;\n    }\n  }\n`;\n\ninterface ICheckCircle {\n  done: boolean;\n}\nconst CheckCircle = styled.div`\n  width: 32px;\n  height: 32px;\n  border-radius: 16px;\n  border: 1px solid #ced4da;\n  font-size: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 20px;\n  cursor: pointer;\n  ${(props: ICheckCircle) =>\n    props.done &&\n    css`\n      border: 1px solid #3866d9;\n      color: #3866d9;\n    `}\n`;\n\ninterface IText {\n  done: boolean;\n}\nconst Text = styled.div`\n  flex: 1;\n  font-size: 21px;\n  color: #495057;\n  ${(props: IText) =>\n    props.done &&\n    css`\n      color: #ced4da;\n    `}\n`;\n\nfunction TodoItem({ id, done, text }) {\n  const dispatch = useTodoDispatch();\n\n  const onToggle = () => {\n    dispatch({\n      type: \"TOGGLE\",\n      id,\n    });\n  };\n\n  const onRemove = () => {\n    dispatch({\n      type: \"REMOVE\",\n      id,\n    });\n  };\n\n  return (\n    <TodoItemBlock>\n      <CheckCircle done={done} onClick={onToggle}>\n        {done === 1 && <MdDone />}\n      </CheckCircle>\n      <Text done={done}>{text}</Text>\n      <Remove onClick={onRemove}>\n        <MdDelete />\n      </Remove>\n    </TodoItemBlock>\n  );\n}\n\nexport default React.memo(TodoItem);\n","import React from \"react\";\nimport TodoItem from \"./TodoItem\";\nimport { useTodoState } from \"../TodoContext\";\n\nfunction TodoList() {\n  const todos = useTodoState();\n\n  return (\n    <div className=\"list-block\">\n      {todos.map((todo) => (\n        <TodoItem\n          id={todo.id}\n          text={todo.text}\n          done={todo.done}\n          key={todo.id}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default TodoList;\n","import React, { useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { MdAdd } from \"react-icons/md\";\nimport { useTodoDispatch, useTodoNextId } from \"../TodoContext\";\n\ninterface iCircleButton {\n  open: boolean;\n}\n\nconst CircleButton = styled.button<iCircleButton>`\n  background: #3866d9;\n  &:hover {\n    background: #6382e6;\n  }\n  &:active {\n    background: #2050c9;\n  }\n\n  z-index: 5;\n  cursor: pointer;\n  width: 80px;\n  height: 80px;\n  display: block;\n  align-items: center;\n  justify-content: center;\n  font-size: 60px;\n  position: absolute;\n  left: 50%;\n  bottom: 0px;\n  transform: translate(-50%, 50%);\n  color: white;\n  border-radius: 50%;\n  border: none;\n  outline: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  transition: 0.125s all ease-in;\n  ${(props) =>\n    props.open &&\n    css`\n      background: #ff6b6b;\n      &:hover {\n        background: #ff8787;\n      }\n      &:active {\n        background: #fa5252;\n      }\n      transform: translate(-50%, 50%) rotate(45deg);\n    `}\n`;\n\nfunction TodoCreate() {\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState(\"\");\n  const dispatch = useTodoDispatch();\n  const nextId: any = useTodoNextId();\n\n  const onToggle = () => setOpen(!open);\n  const onChange = (e) => setValue(e.target.value);\n  const onSubmit = (e) => {\n    e.preventDefault();\n    dispatch({\n      type: \"CREATE\",\n      todo: {\n        id: nextId ? nextId : nextId.current,\n        text: value,\n        done: false,\n      },\n    });\n    setOpen(false);\n    setValue(\"\");\n  };\n\n  return (\n    <>\n      {open && (\n        <div className=\"insert-form-positioner\">\n          <form className=\"insert-form\" onSubmit={onSubmit}>\n            <input\n              className=\"input\"\n              autoFocus\n              onChange={onChange}\n              value={value}\n              placeholder=\"할 일을 입력 후, Enter 를 누르세요\"\n            />\n          </form>\n        </div>\n      )}\n      <CircleButton onClick={onToggle} open={open}>\n        <MdAdd />\n      </CircleButton>\n    </>\n  );\n}\n\nexport default React.memo(TodoCreate);\n","import React from \"react\";\r\nimport \"./main.scss\";\r\nimport { RiLogoutCircleLine } from \"react-icons/ri\";\r\nimport TodoHead from \"../../layout/TodoHead\";\r\nimport TodoList from \"../../components/main/TodoList\";\r\nimport TodoCreate from \"../../components/main/TodoCreate\";\r\n\r\nconst MainPage = () => {\r\n  return (\r\n    <div className=\"template-block\">\r\n      <button className=\"circle-button\">\r\n        <RiLogoutCircleLine />\r\n      </button>\r\n      <TodoHead />\r\n      <TodoList />\r\n      <TodoCreate />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import React from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport LoginPage from \"./views/login/LoginPage\";\nimport MainPage from \"./views/main/MainPage\";\n\nimport { TodoProvider } from \"./components/TodoContext\";\n\nimport { createGlobalStyle } from \"styled-components\";\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background: #e9ecef\n  }\n`;\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <TodoProvider>\n        <GlobalStyle />\n        <Routes>\n          <Route path=\"/\" element={<LoginPage />} />\n          <Route path=\"/main\" element={<MainPage />} />\n        </Routes>\n      </TodoProvider>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}