{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\studying\\\\typescript\\\\my-server\\\\client\\\\src\\\\components\\\\main\\\\TodoCreate.tsx\";\nimport React, { useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { MdAdd } from \"react-icons/md\";\nimport { useTodoDispatch, useTodoNextId } from \"../TodoContext\";\nconst CircleButton = styled.button`\n  background: #3866d9;\n  &:hover {\n    background: #6382e6;\n  }\n  &:active {\n    background: #2050c9;\n  }\n\n  z-index: 5;\n  cursor: pointer;\n  width: 80px;\n  height: 80px;\n  display: block;\n  align-items: center;\n  justify-content: center;\n  font-size: 60px;\n  position: absolute;\n  left: 50%;\n  bottom: 0px;\n  transform: translate(-50%, 50%);\n  color: white;\n  border-radius: 50%;\n  border: none;\n  outline: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  transition: 0.125s all ease-in;\n  ${props => props.open && css`\n      background: #ff6b6b;\n      &:hover {\n        background: #ff8787;\n      }\n      &:active {\n        background: #fa5252;\n      }\n      transform: translate(-50%, 50%) rotate(45deg);\n    `}\n`;\n\nfunction TodoCreate() {\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState(\"\");\n  const dispatch = useTodoDispatch();\n  const nextId = useTodoNextId();\n\n  const onToggle = () => setOpen(!open);\n\n  const onChange = e => setValue(e.target.value);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    dispatch({\n      type: \"CREATE\",\n      todo: {\n        id: nextId ? nextId : nextId.current,\n        text: value,\n        done: false\n      }\n    });\n    setOpen(false);\n    setValue(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, open && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"insert-form-positioner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"insert-form\",\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input\",\n    autoFocus: true,\n    onChange: onChange,\n    value: value,\n    placeholder: \"\\uD560 \\uC77C\\uC744 \\uC785\\uB825 \\uD6C4, Enter \\uB97C \\uB204\\uB974\\uC138\\uC694\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(CircleButton, {\n    onClick: onToggle,\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MdAdd, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default React.memo(TodoCreate);","map":{"version":3,"names":["React","useState","styled","css","MdAdd","useTodoDispatch","useTodoNextId","CircleButton","button","props","open","TodoCreate","setOpen","value","setValue","dispatch","nextId","onToggle","onChange","e","target","onSubmit","preventDefault","type","todo","id","current","text","done","memo"],"sources":["C:/workspace/studying/typescript/my-server/client/src/components/main/TodoCreate.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { MdAdd } from \"react-icons/md\";\nimport { useTodoDispatch, useTodoNextId } from \"../TodoContext\";\n\ninterface iCircleButton {\n  open: boolean;\n}\n\nconst CircleButton = styled.button<iCircleButton>`\n  background: #3866d9;\n  &:hover {\n    background: #6382e6;\n  }\n  &:active {\n    background: #2050c9;\n  }\n\n  z-index: 5;\n  cursor: pointer;\n  width: 80px;\n  height: 80px;\n  display: block;\n  align-items: center;\n  justify-content: center;\n  font-size: 60px;\n  position: absolute;\n  left: 50%;\n  bottom: 0px;\n  transform: translate(-50%, 50%);\n  color: white;\n  border-radius: 50%;\n  border: none;\n  outline: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  transition: 0.125s all ease-in;\n  ${(props) =>\n    props.open &&\n    css`\n      background: #ff6b6b;\n      &:hover {\n        background: #ff8787;\n      }\n      &:active {\n        background: #fa5252;\n      }\n      transform: translate(-50%, 50%) rotate(45deg);\n    `}\n`;\n\nfunction TodoCreate() {\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState(\"\");\n  const dispatch = useTodoDispatch();\n  const nextId: any = useTodoNextId();\n\n  const onToggle = () => setOpen(!open);\n  const onChange = (e) => setValue(e.target.value);\n  const onSubmit = (e) => {\n    e.preventDefault();\n    dispatch({\n      type: \"CREATE\",\n      todo: {\n        id: nextId ? nextId : nextId.current,\n        text: value,\n        done: false,\n      },\n    });\n    setOpen(false);\n    setValue(\"\");\n  };\n\n  return (\n    <>\n      {open && (\n        <div className=\"insert-form-positioner\">\n          <form className=\"insert-form\" onSubmit={onSubmit}>\n            <input\n              className=\"input\"\n              autoFocus\n              onChange={onChange}\n              value={value}\n              placeholder=\"할 일을 입력 후, Enter 를 누르세요\"\n            />\n          </form>\n        </div>\n      )}\n      <CircleButton onClick={onToggle} open={open}>\n        <MdAdd />\n      </CircleButton>\n    </>\n  );\n}\n\nexport default React.memo(TodoCreate);\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,eAAT,EAA0BC,aAA1B,QAA+C,gBAA/C;AAMA,MAAMC,YAAY,GAAGL,MAAM,CAACM,MAAsB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAKC,KAAD,IACAA,KAAK,CAACC,IAAN,IACAP,GAAI;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAM;AACN,CA1CA;;AA4CA,SAASQ,UAAT,GAAsB;EACpB,MAAM,CAACD,IAAD,EAAOE,OAAP,IAAkBX,QAAQ,CAAC,KAAD,CAAhC;EACA,MAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAMc,QAAQ,GAAGV,eAAe,EAAhC;EACA,MAAMW,MAAW,GAAGV,aAAa,EAAjC;;EAEA,MAAMW,QAAQ,GAAG,MAAML,OAAO,CAAC,CAACF,IAAF,CAA9B;;EACA,MAAMQ,QAAQ,GAAIC,CAAD,IAAOL,QAAQ,CAACK,CAAC,CAACC,MAAF,CAASP,KAAV,CAAhC;;EACA,MAAMQ,QAAQ,GAAIF,CAAD,IAAO;IACtBA,CAAC,CAACG,cAAF;IACAP,QAAQ,CAAC;MACPQ,IAAI,EAAE,QADC;MAEPC,IAAI,EAAE;QACJC,EAAE,EAAET,MAAM,GAAGA,MAAH,GAAYA,MAAM,CAACU,OADzB;QAEJC,IAAI,EAAEd,KAFF;QAGJe,IAAI,EAAE;MAHF;IAFC,CAAD,CAAR;IAQAhB,OAAO,CAAC,KAAD,CAAP;IACAE,QAAQ,CAAC,EAAD,CAAR;EACD,CAZD;;EAcA,oBACE,0CACGJ,IAAI,iBACH;IAAK,SAAS,EAAC,wBAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAM,SAAS,EAAC,aAAhB;IAA8B,QAAQ,EAAEW,QAAxC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IACE,SAAS,EAAC,OADZ;IAEE,SAAS,MAFX;IAGE,QAAQ,EAAEH,QAHZ;IAIE,KAAK,EAAEL,KAJT;IAKE,WAAW,EAAC,gFALd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,CADF,CAFJ,eAcE,oBAAC,YAAD;IAAc,OAAO,EAAEI,QAAvB;IAAiC,IAAI,EAAEP,IAAvC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,KAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,CAdF,CADF;AAoBD;;AAED,eAAeV,KAAK,CAAC6B,IAAN,CAAWlB,UAAX,CAAf"},"metadata":{},"sourceType":"module"}