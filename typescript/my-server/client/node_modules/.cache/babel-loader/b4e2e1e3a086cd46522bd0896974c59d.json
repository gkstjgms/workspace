{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\studying\\\\typescript\\\\my-server\\\\client\\\\src\\\\components\\\\TodoContext.tsx\";\nimport React, { createContext, useReducer, useContext, useState, useEffect } from \"react\";\nimport * as apiCaller from \"../utils/apiCaller\";\nconst TodoStateContext = createContext(null);\nconst TodoDispatchContext = createContext(null);\nconst TodoNextIdContext = createContext(null);\n\nfunction TodoReducer(state, action) {\n  switch (action.type) {\n    case \"CREATE\":\n      {\n        apiCaller.AddTodos(action.todo);\n        return state.concat(action.todo);\n      }\n\n    case \"REPLACE\":\n      return action.array;\n\n    case \"TOGGLE\":\n      {\n        let id = state.filter(todo => todo.id === action.id);\n        apiCaller.ToggleTodos(id[0]);\n        return state.map(todo => todo.id === action.id ? { ...todo,\n          done: !todo.done\n        } : todo); // 기본: return state.map(todo => todo.id === action.id ? { ...todo, done: !todo.done } : todo);\n      }\n\n    case \"REMOVE\":\n      {\n        let id = state.filter(todo => todo.id === action.id);\n        apiCaller.DeleteTodos(id[0]);\n        return state.filter(todo => todo.id !== action.id);\n      }\n\n    default:\n      return state;\n  }\n}\n\nconst initialTodos = [{\n  id: 1,\n  text: \"sample\",\n  done: false\n}, {\n  id: 2,\n  text: \"page\",\n  done: true\n}];\nexport function TodoProvider(_ref) {\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(TodoReducer, initialTodos);\n  const [nextId, setNextID] = useState(3);\n  useEffect(() => {\n    getItems();\n  }, []);\n  let data;\n\n  async function getItems() {\n    data = await apiCaller.GetTodos();\n    let nextID = data[data.length - 1].id;\n    setNextID(nextID + 1);\n    dispatch({\n      type: \"REPLACE\",\n      array: data\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(TodoStateContext.Provider, {\n    value: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TodoDispatchContext.Provider, {\n    value: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TodoNextIdContext.Provider, {\n    value: nextId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, children)));\n}\nexport function useTodoState() {\n  return useContext(TodoStateContext);\n}\nexport function useTodoDispatch() {\n  return useContext(TodoDispatchContext);\n}\nexport function useTodoNextId() {\n  return useContext(TodoNextIdContext);\n}","map":{"version":3,"names":["React","createContext","useReducer","useContext","useState","useEffect","apiCaller","TodoStateContext","TodoDispatchContext","TodoNextIdContext","TodoReducer","state","action","type","AddTodos","todo","concat","array","id","filter","ToggleTodos","map","done","DeleteTodos","initialTodos","text","TodoProvider","children","dispatch","nextId","setNextID","getItems","data","GetTodos","nextID","length","useTodoState","useTodoDispatch","useTodoNextId"],"sources":["C:/workspace/studying/typescript/my-server/client/src/components/TodoContext.tsx"],"sourcesContent":["import React, {\r\n  createContext,\r\n  useReducer,\r\n  useContext,\r\n  useState,\r\n  useEffect,\r\n} from \"react\";\r\nimport * as apiCaller from \"../utils/apiCaller\";\r\n\r\nconst TodoStateContext = createContext(null);\r\nconst TodoDispatchContext = createContext(null);\r\nconst TodoNextIdContext = createContext(null);\r\n\r\nfunction TodoReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"CREATE\": {\r\n      apiCaller.AddTodos(action.todo);\r\n      return state.concat(action.todo);\r\n    }\r\n    case \"REPLACE\":\r\n      return action.array;\r\n    case \"TOGGLE\": {\r\n      let id = state.filter((todo) => todo.id === action.id);\r\n      apiCaller.ToggleTodos(id[0]);\r\n      return state.map((todo) =>\r\n        todo.id === action.id ? { ...todo, done: !todo.done } : todo\r\n      );\r\n      // 기본: return state.map(todo => todo.id === action.id ? { ...todo, done: !todo.done } : todo);\r\n    }\r\n    case \"REMOVE\": {\r\n      let id = state.filter((todo) => todo.id === action.id);\r\n      apiCaller.DeleteTodos(id[0]);\r\n      return state.filter((todo) => todo.id !== action.id);\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst initialTodos = [\r\n  {\r\n    id: 1,\r\n    text: \"sample\",\r\n    done: false,\r\n  },\r\n  {\r\n    id: 2,\r\n    text: \"page\",\r\n    done: true,\r\n  },\r\n];\r\n\r\nexport function TodoProvider({ children }) {\r\n  const [state, dispatch] = useReducer(TodoReducer, initialTodos);\r\n  const [nextId, setNextID] = useState(3);\r\n\r\n  useEffect(() => {\r\n    getItems();\r\n  }, []);\r\n\r\n  let data;\r\n\r\n  async function getItems() {\r\n    data = await apiCaller.GetTodos();\r\n    let nextID = data[data.length - 1].id;\r\n    setNextID(nextID + 1);\r\n    dispatch({\r\n      type: \"REPLACE\",\r\n      array: data,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <TodoStateContext.Provider value={state}>\r\n      <TodoDispatchContext.Provider value={dispatch}>\r\n        <TodoNextIdContext.Provider value={nextId}>\r\n          {children}\r\n        </TodoNextIdContext.Provider>\r\n      </TodoDispatchContext.Provider>\r\n    </TodoStateContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useTodoState() {\r\n  return useContext(TodoStateContext);\r\n}\r\n\r\nexport function useTodoDispatch() {\r\n  return useContext(TodoDispatchContext);\r\n}\r\n\r\nexport function useTodoNextId() {\r\n  return useContext(TodoNextIdContext);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}