{"version":3,"sources":["C:\\workspace\\studying\\typescript\\my-server\\server\\controller\\TodoItemController.ts","C:\\workspace\\studying\\typescript\\my-server\\server\\entity\\entity.ts","C:\\workspace\\studying\\typescript\\my-server\\server\\entity\\todoEntity.ts","C:\\workspace\\studying\\typescript\\my-server\\server\\routes\\todoItem.ts","external \"@godaddy/terminus\"","external \"cors\"","external \"dotenv/config\"","external \"express\"","external \"morgan\"","external \"process\"","external \"reflect-metadata\"","external \"typeorm\"","webpack/bootstrap","C:\\workspace\\studying\\typescript\\my-server\\server\\src\\index.ts"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["import { getRepository } from \"typeorm\";\r\nimport { NextFunction, Request, Response } from \"express\";\r\n\r\ninterface iTodoList {\r\n  id: number;\r\n  text: string;\r\n  done?: boolean;\r\n}\r\n\r\nexport class TodoItemController {}\r\n","import { todoEntity } from \"./todoEntity\";\r\n\r\nconst Entity = [todoEntity];\r\n\r\nexport default Entity;\r\n","import { Column, Entity, Index, Generated } from \"typeorm\";\r\n\r\n@Index(\"No_UNIQUE\", [\"id\"], { unique: true })\r\n@Entity(\"myTodoList\", { schema: \"myTodoList\" })\r\nexport class todoEntity {\r\n  @Column({ primary: true, type: \"int\", name: \"id\" })\r\n  @Generated(\"increment\")\r\n  id: number;\r\n\r\n  @Column(\"varchar\", { name: \"text\", nullable: false }) // todo\r\n  text: string;\r\n\r\n  @Column(\"tinyint\", { name: \"done\", nullable: true }) // check\r\n  done: boolean;\r\n}\r\n","import { TodoItemController } from \"../controller/TodoItemController\";\r\n\r\nconst TodoItem = [\r\n  {\r\n    method: \"post\",\r\n    route: \"/addTodo\",\r\n    controller: TodoItemController,\r\n    action: \"addTodo\",\r\n  },\r\n  {\r\n    method: \"get\",\r\n    route: \"/getTodo\",\r\n    controller: TodoItemController,\r\n    action: \"getTodo\",\r\n  },\r\n  {\r\n    method: \"put\",\r\n    route: \"/putTodo\",\r\n    controller: TodoItemController,\r\n    action: \"putTodo\",\r\n  },\r\n  {\r\n    method: \"delete\",\r\n    route: \"/deleteTodo\",\r\n    controller: TodoItemController,\r\n    action: \"deleteTodo\",\r\n  },\r\n];\r\n\r\nconst Routes = [...TodoItem];\r\n\r\nexport default Routes;\r\n","module.exports = require(\"@godaddy/terminus\");;","module.exports = require(\"cors\");;","module.exports = require(\"dotenv/config\");;","module.exports = require(\"express\");;","module.exports = require(\"morgan\");;","module.exports = require(\"process\");;","module.exports = require(\"reflect-metadata\");;","module.exports = require(\"typeorm\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import \"reflect-metadata\";\r\nimport { createConnections, ConnectionOptions, Connection } from \"typeorm\";\r\nimport { MysqlConnectionOptions } from \"typeorm/driver/mysql/MysqlConnectionOptions\";\r\nimport * as express from \"express\";\r\nimport { Request, Response } from \"express\";\r\nimport * as cors from \"cors\";\r\nimport * as morgan from \"morgan\";\r\nimport Routes from \"../routes/todoItem\";\r\nimport Entity from \"../entity/entity\";\r\n\r\nimport { exit } from \"process\";\r\nimport { createTerminus } from \"@godaddy/terminus\";\r\n\r\nimport \"dotenv/config\";\r\n\r\nconst connectionOptions: ConnectionOptions[] = [];\r\n\r\nconnectionOptions.push({\r\n  type: \"mysql\",\r\n  username: process.env.INTERNAL_AUTH ? process.env.INTERNAL_AUTH : \"root\",\r\n  password: process.env.INTERNAL_PASSWORD\r\n    ? process.env.INTERNAL_PASSWORD\r\n    : \"tj3gms4!\",\r\n  database: process.env.INTERNAL_DATABASE\r\n    ? process.env.INTERNAL_DATABASE\r\n    : \"myTodoList\",\r\n  logging: true,\r\n  entities: Entity,\r\n});\r\n\r\nconst run = async (options) => {\r\n  try {\r\n    const connection: Connection[] = await createConnections(options);\r\n\r\n    const app = express();\r\n    app.use(cors());\r\n    app.use(express.json());\r\n    app.use(express.urlencoded({ extended: false }));\r\n    app.use(express.static(\"../../client/build\"));\r\n    app.use(\r\n      morgan(\r\n        `\":method :url HTTP/:http-version\" :status :res[content-length] \":referrer\" \":user-agent\"`,\r\n        {}\r\n      )\r\n    );\r\n\r\n    Routes.forEach((route) => {\r\n      (app as any)[route.method](\r\n        route.route,\r\n        (req: Request, res: Response, next: Function) => {\r\n          const result = new (route.controller as any)()[route.action](\r\n            req,\r\n            res,\r\n            next\r\n          );\r\n          if (result instanceof Promise) {\r\n            result\r\n              .catch((ex) => {\r\n                res.json(ex.message);\r\n              })\r\n              .then((result) =>\r\n                result !== null && result !== undefined\r\n                  ? res.send(result)\r\n                  : undefined\r\n              );\r\n          } else if (result !== null && result !== undefined) {\r\n            res.json(result);\r\n          }\r\n        }\r\n      );\r\n    });\r\n\r\n    const port = 8000;\r\n    const server = app.listen(port);\r\n\r\n    const onSignal = async () => {\r\n      connection.forEach(async (c) => await c.close());\r\n    };\r\n\r\n    const onHealthCheck = async () => {\r\n      return true;\r\n    };\r\n\r\n    server.on(\"error\", (err) => {\r\n      exit(1);\r\n    });\r\n\r\n    createTerminus(server, {\r\n      signal: \"SIGINT\",\r\n      healthChecks: {\r\n        \"/_health/liveness\": onHealthCheck,\r\n      },\r\n      onSignal: onSignal,\r\n    });\r\n\r\n    connectionOptions.forEach((op: MysqlConnectionOptions, index: number) => {\r\n      console.info(`---Server ConnectionOptions---`);\r\n      console.info(`Typeorm type: ${op.type}`);\r\n    });\r\n    console.info(`My server has started on port ${port}`);\r\n  } catch (ex) {\r\n    console.error(ex.message);\r\n    exit(1);\r\n  }\r\n};\r\n\r\nrun(connectionOptions);\r\n"],"sourceRoot":""}