{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\workspace\\\\studying\\\\typescript\\\\mashup-todolist\\\\ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\workspace\\\\studying\\\\typescript\\\\mashup-todolist\\\\ui\\\\src\\\\components\\\\TodoLogout.tsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    background: #3866d9;\\n    &:hover {\\n        background: #6382e6; \\n    }\\n\\n    z-index: 6;\\n    cursor: pointer;\\n    width: 50px;\\n    height: 50px;\\n    display: block;\\n    justify-content: center;\\n    font-size: 60px;\\n    position: absolute;\\n    left: 50%;\\n    bottom: 0px;\\n    transform: translate(-50%, -1480%);\\n    color: white;\\n    border-radius: 50%;\\n    border: none;\\n    outline: none;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n\\n    transition: 0.125s all ease-in;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { RiLogoutCircleLine } from 'react-icons/ri';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport * as apiCaller from '../util/apiCaller';\nimport { userLogouted } from '../redux/features/loginSlice';\nconst CircleButton = styled.button(_templateObject());\n\nfunction TodoLogout() {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const onLogin = async () => {\n    try {\n      const res = await apiCaller.Login(id, pw);\n      const authInfo = {\n        id: res.data.id,\n        userid: res.data.userid,\n        userpw: res.data.userpw\n      };\n\n      if (id === res.data.userid && pw === res.data.userpw) {\n        dispatch(userLogouted(authInfo));\n        navigate('/todo');\n      } else {\n        alert('Please check Id or Password again.');\n        setId('');\n        setPw('');\n      }\n    } catch (ex) {\n      alert('Failed.');\n    }\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(CircleButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(RiLogoutCircleLine, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })));\n}\n\nexport default TodoLogout;","map":{"version":3,"sources":["C:\\workspace\\studying\\typescript\\mashup-todolist\\ui\\src\\components\\TodoLogout.tsx"],"names":["React","styled","RiLogoutCircleLine","useNavigate","useDispatch","apiCaller","userLogouted","CircleButton","button","TodoLogout","navigate","dispatch","onLogin","res","Login","id","pw","authInfo","data","userid","userpw","alert","setId","setPw","ex"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAgC,OAAhC;AACA,OAAOC,MAAP,MAA4B,mBAA5B;AACA,SAASC,kBAAT,QAAmC,gBAAnC;AAEA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAO,KAAKC,SAAZ,MAA2B,mBAA3B;AAEA,SAASC,YAAT,QAA6B,8BAA7B;AAEA,MAAMC,YAAY,GAAGN,MAAM,CAACO,MAAV,mBAAlB;;AA4BA,SAASC,UAAT,GAAsB;AAClB,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,QAAQ,GAAGP,WAAW,EAA5B;;AAEA,QAAMQ,OAAO,GAAG,YAAY;AACxB,QAAI;AACA,YAAMC,GAAG,GAAG,MAAMR,SAAS,CAACS,KAAV,CAAgBC,EAAhB,EAAoBC,EAApB,CAAlB;AACA,YAAMC,QAAmB,GAAG;AACxBF,QAAAA,EAAE,EAAEF,GAAG,CAACK,IAAJ,CAASH,EADW;AAExBI,QAAAA,MAAM,EAAEN,GAAG,CAACK,IAAJ,CAASC,MAFO;AAGxBC,QAAAA,MAAM,EAAEP,GAAG,CAACK,IAAJ,CAASE;AAHO,OAA5B;;AAKA,UAAIL,EAAE,KAAKF,GAAG,CAACK,IAAJ,CAASC,MAAhB,IAA0BH,EAAE,KAAKH,GAAG,CAACK,IAAJ,CAASE,MAA9C,EAAsD;AAClDT,QAAAA,QAAQ,CAACL,YAAY,CAACW,QAAD,CAAb,CAAR;AACAP,QAAAA,QAAQ,CAAC,OAAD,CAAR;AACH,OAHD,MAGO;AACHW,QAAAA,KAAK,CAAC,oCAAD,CAAL;AACAC,QAAAA,KAAK,CAAC,EAAD,CAAL;AACAC,QAAAA,KAAK,CAAC,EAAD,CAAL;AACH;AACJ,KAfD,CAeE,OAAOC,EAAP,EAAW;AACTH,MAAAA,KAAK,CAAC,SAAD,CAAL;AACH;AACJ,GAnBD;;AAqBA,SACI,0CACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ;AAOH;;AAED,eAAeZ,UAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { RiLogoutCircleLine } from 'react-icons/ri';\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport * as apiCaller from '../util/apiCaller';\r\nimport { iUserInfo } from '../redux/features/loginSlice';\r\nimport { userLogouted } from '../redux/features/loginSlice';\r\n\r\nconst CircleButton = styled.button`\r\n    background: #3866d9;\r\n    &:hover {\r\n        background: #6382e6; \r\n    }\r\n\r\n    z-index: 6;\r\n    cursor: pointer;\r\n    width: 50px;\r\n    height: 50px;\r\n    display: block;\r\n    justify-content: center;\r\n    font-size: 60px;\r\n    position: absolute;\r\n    left: 50%;\r\n    bottom: 0px;\r\n    transform: translate(-50%, -1480%);\r\n    color: white;\r\n    border-radius: 50%;\r\n    border: none;\r\n    outline: none;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    transition: 0.125s all ease-in;\r\n`;\r\n\r\nfunction TodoLogout() {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const onLogin = async () => {\r\n        try {\r\n            const res = await apiCaller.Login(id, pw);\r\n            const authInfo: iUserInfo = {\r\n                id: res.data.id,\r\n                userid: res.data.userid,\r\n                userpw: res.data.userpw,\r\n            };\r\n            if (id === res.data.userid && pw === res.data.userpw) {\r\n                dispatch(userLogouted(authInfo));\r\n                navigate('/todo');\r\n            } else {\r\n                alert('Please check Id or Password again.');\r\n                setId('');\r\n                setPw('');\r\n            }\r\n        } catch (ex) {\r\n            alert('Failed.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CircleButton>\r\n                <RiLogoutCircleLine />\r\n            </CircleButton>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TodoLogout;\r\n"]},"metadata":{},"sourceType":"module"}