{"ast":null,"code":"import _slicedToArray from \"C:\\\\workspace\\\\studying\\\\typescript\\\\mashup-todolist\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:\\\\workspace\\\\studying\\\\typescript\\\\mashup-todolist\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\workspace\\\\studying\\\\typescript\\\\mashup-todolist\\\\src\\\\components\\\\TodoCreate.tsx\";\n\nfunction _templateObject5() {\n  const data = _taggedTemplateLiteral([\"\\n  padding: 12px;\\n  border-radius: 4px;\\n  border: 1px solid #dee2e6;\\n  width: 100%;\\n  outline: none;\\n  font-size: 18px;\\n  box-sizing: border-box;\\n\"]);\n\n  _templateObject5 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n  background: #f8f9fa;\\n  padding-left: 32px;\\n  padding-top: 32px;\\n  padding-right: 32px;\\n  padding-bottom: 72px;\\n\\n  border-bottom-left-radius: 16px;\\n  border-bottom-right-radius: 16px;\\n  border-top: 1px solid #e9ecef;\\n\"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  bottom: 0;\\n  left: 0;\\n  position: absolute;\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n      background: #ff6b6b;\\n      &:hover {\\n        background: #ff8787;\\n      }\\n      &:active {\\n        background: #fa5252;\\n      }\\n      transform: translate(-50%, 50%) rotate(45deg);\\n    \"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  background: #38d9a9;\\n  &:hover {\\n    background: #63e6be;\\n  }\\n  &:active {\\n    background: #20c997;\\n  }\\n\\n  z-index: 5;\\n  cursor: pointer;\\n  width: 80px;\\n  height: 80px;\\n  display: block;\\n  align-items: center;\\n  justify-content: center;\\n  font-size: 60px;\\n  position: absolute;\\n  left: 50%;\\n  bottom: 0px;\\n  transform: translate(-50%, 50%);\\n  color: white;\\n  border-radius: 50%;\\n  border: none;\\n  outline: none;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n\\n  transition: 0.125s all ease-in;\\n  \", \"\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { MdAdd } from 'react-icons/md';\nimport { useTodoDispatch, useTodoNextId } from '../TodoContext';\nconst CircleButton = styled.button(_templateObject(), props => props.open && css(_templateObject2()));\nconst InsertFormPositioner = styled.div(_templateObject3());\nconst InsertForm = styled.form(_templateObject4());\nconst Input = styled.input(_templateObject5());\n\nfunction TodoCreate() {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        open = _useState2[0],\n        setOpen = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        value = _useState4[0],\n        setValue = _useState4[1];\n\n  const dispatch = useTodoDispatch();\n  const nextId = useTodoNextId();\n\n  const onToggle = () => setOpen(!open);\n\n  const onChange = e => setValue(e.target.value);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    dispatch({\n      type: 'CREATE',\n      todo: {\n        id: nextId.current,\n        text: value,\n        done: false\n      }\n    });\n    setOpen(false);\n    setValue('');\n  };\n\n  return React.createElement(React.Fragment, null, open && React.createElement(InsertFormPositioner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(InsertForm, {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Input, {\n    autoFocus: true,\n    onChange: onChange,\n    value: value,\n    placeholder: \"\\uD560 \\uC77C\\uC744 \\uC785\\uB825 \\uD6C4, Enter \\uB97C \\uB204\\uB974\\uC138\\uC694\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }))), React.createElement(CircleButton, {\n    onClick: onToggle,\n    open: open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(MdAdd, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  })));\n}\n\nexport default React.memo(TodoCreate);","map":{"version":3,"sources":["C:\\workspace\\studying\\typescript\\mashup-todolist\\src\\components\\TodoCreate.tsx"],"names":["React","useState","styled","css","MdAdd","useTodoDispatch","useTodoNextId","CircleButton","button","props","open","InsertFormPositioner","div","InsertForm","form","Input","input","TodoCreate","setOpen","value","setValue","dispatch","nextId","onToggle","onChange","e","target","onSubmit","preventDefault","type","todo","id","current","text","done","memo"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,eAAT,EAA0BC,aAA1B,QAA+C,gBAA/C;AAMA,MAAMC,YAAY,GAAGL,MAAM,CAACM,MAAV,oBA8BdC,KAAK,IACLA,KAAK,CAACC,IAAN,IACAP,GADA,oBA/Bc,CAAlB;AA4CA,MAAMQ,oBAAoB,GAAGT,MAAM,CAACU,GAAV,oBAA1B;AAOA,MAAMC,UAAU,GAAGX,MAAM,CAACY,IAAV,oBAAhB;AAYA,MAAMC,KAAK,GAAGb,MAAM,CAACc,KAAV,oBAAX;;AAUA,SAASC,UAAT,GAAsB;AAAA,oBACIhB,QAAQ,CAAC,KAAD,CADZ;AAAA;AAAA,QACbS,IADa;AAAA,QACPQ,OADO;;AAAA,qBAEMjB,QAAQ,CAAC,EAAD,CAFd;AAAA;AAAA,QAEbkB,KAFa;AAAA,QAENC,QAFM;;AAGpB,QAAMC,QAAQ,GAAGhB,eAAe,EAAhC;AACA,QAAMiB,MAAW,GAAGhB,aAAa,EAAjC;;AAEA,QAAMiB,QAAQ,GAAG,MAAML,OAAO,CAAC,CAACR,IAAF,CAA9B;;AACA,QAAMc,QAAQ,GAAIC,CAAD,IAAYL,QAAQ,CAACK,CAAC,CAACC,MAAF,CAASP,KAAV,CAArC;;AACA,QAAMQ,QAAQ,GAAIF,CAAD,IAAY;AAC3BA,IAAAA,CAAC,CAACG,cAAF;AACAP,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAE,QADC;AAEPC,MAAAA,IAAI,EAAE;AACJC,QAAAA,EAAE,EAAET,MAAM,CAACU,OADP;AAEJC,QAAAA,IAAI,EAAEd,KAFF;AAGJe,QAAAA,IAAI,EAAE;AAHF;AAFC,KAAD,CAAR;AAUAhB,IAAAA,OAAO,CAAC,KAAD,CAAP;AACAE,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAdD;;AAgBA,SACE,0CACGV,IAAI,IACH,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,QAAQ,EAAEiB,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,QAAQ,EAAEH,QAFZ;AAGE,IAAA,KAAK,EAAEL,KAHT;AAIE,IAAA,WAAW,EAAC,gFAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAFJ,EAaE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEI,QAAvB;AAAiC,IAAA,IAAI,EAAEb,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAbF,CADF;AAmBD;;AAED,eAAeV,KAAK,CAACmC,IAAN,CAAWlB,UAAX,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { MdAdd } from 'react-icons/md';\nimport { useTodoDispatch, useTodoNextId } from '../TodoContext';\n\ninterface iCircleButton {\n  open: boolean;\n}\n\nconst CircleButton = styled.button<iCircleButton>`\n  background: #38d9a9;\n  &:hover {\n    background: #63e6be;\n  }\n  &:active {\n    background: #20c997;\n  }\n\n  z-index: 5;\n  cursor: pointer;\n  width: 80px;\n  height: 80px;\n  display: block;\n  align-items: center;\n  justify-content: center;\n  font-size: 60px;\n  position: absolute;\n  left: 50%;\n  bottom: 0px;\n  transform: translate(-50%, 50%);\n  color: white;\n  border-radius: 50%;\n  border: none;\n  outline: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  transition: 0.125s all ease-in;\n  ${props =>\n    props.open &&\n    css`\n      background: #ff6b6b;\n      &:hover {\n        background: #ff8787;\n      }\n      &:active {\n        background: #fa5252;\n      }\n      transform: translate(-50%, 50%) rotate(45deg);\n    `}\n`;\n\nconst InsertFormPositioner = styled.div`\n  width: 100%;\n  bottom: 0;\n  left: 0;\n  position: absolute;\n`;\n\nconst InsertForm = styled.form`\n  background: #f8f9fa;\n  padding-left: 32px;\n  padding-top: 32px;\n  padding-right: 32px;\n  padding-bottom: 72px;\n\n  border-bottom-left-radius: 16px;\n  border-bottom-right-radius: 16px;\n  border-top: 1px solid #e9ecef;\n`;\n\nconst Input = styled.input`\n  padding: 12px;\n  border-radius: 4px;\n  border: 1px solid #dee2e6;\n  width: 100%;\n  outline: none;\n  font-size: 18px;\n  box-sizing: border-box;\n`;\n\nfunction TodoCreate() {\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState('');\n  const dispatch = useTodoDispatch();\n  const nextId: any = useTodoNextId();\n\n  const onToggle = () => setOpen(!open);\n  const onChange = (e: any) => setValue(e.target.value);\n  const onSubmit = (e: any) => {\n    e.preventDefault();\n    dispatch({\n      type: 'CREATE',\n      todo: {\n        id: nextId.current,\n        text: value,\n        done: false\n      }\n    });\n\n\n    setOpen(false);\n    setValue('');\n  };\n\n  return (\n    <>\n      {open && (\n        <InsertFormPositioner>\n          <InsertForm onSubmit={onSubmit}>\n            <Input\n              autoFocus\n              onChange={onChange}\n              value={value}\n              placeholder=\"할 일을 입력 후, Enter 를 누르세요\"\n            />\n          </InsertForm>\n        </InsertFormPositioner>\n      )}\n      <CircleButton onClick={onToggle} open={open}>\n        <MdAdd />\n      </CircleButton>\n    </>\n  );\n}\n\nexport default React.memo(TodoCreate);\n"]},"metadata":{},"sourceType":"module"}