{"ast":null,"code":"import { configureStore, combineReducers } from '@reduxjs/toolkit';\nimport { persistReducer, persistStore } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport loginReducer from './features/loginSlice';\nconst persistConfig = {\n  key: 'root',\n  storage\n};\nconst persistedReducer = persistReducer(persistConfig, combineReducers({\n  user: loginReducer\n}));\nexport const store = configureStore({\n  reducer: persistedReducer\n});\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["C:\\workspace\\studying\\typescript\\mashup-todolist\\ui\\src\\redux\\store.tsx"],"names":["configureStore","combineReducers","persistReducer","persistStore","storage","loginReducer","persistConfig","key","persistedReducer","user","store","reducer","persistor"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,eAAzB,QAAqE,kBAArE;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,OAAOC,YAAP,MAAyB,uBAAzB;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBH,EAAAA;AAFkB,CAAtB;AAKA,MAAMI,gBAAgB,GAAGN,cAAc,CACnCI,aADmC,EAEnCL,eAAe,CAAC;AACZQ,EAAAA,IAAI,EAAEJ;AADM,CAAD,CAFoB,CAAvC;AAOA,OAAO,MAAMK,KAAK,GAAGV,cAAc,CAAC;AAChCW,EAAAA,OAAO,EAAEH;AADuB,CAAD,CAA5B;AAIP,OAAO,MAAMI,SAAS,GAAGT,YAAY,CAACO,KAAD,CAA9B","sourcesContent":["import { configureStore, combineReducers, ThunkAction, Action } from '@reduxjs/toolkit';\r\nimport { persistReducer, persistStore } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport loginReducer from './features/loginSlice';\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(\r\n    persistConfig,\r\n    combineReducers({\r\n        user: loginReducer,\r\n    }),\r\n);\r\n\r\nexport const store = configureStore({\r\n    reducer: persistedReducer,\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, RootState, unknown, Action<string>>;\r\n"]},"metadata":{},"sourceType":"module"}