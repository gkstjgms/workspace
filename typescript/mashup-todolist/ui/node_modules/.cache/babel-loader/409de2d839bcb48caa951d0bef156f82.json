{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  isLogined: false,\n  status: 'idle',\n  userInfo: {}\n};\nexport const loginSlice = createSlice({\n  name: 'login',\n  initialState,\n  reducers: {\n    userLogined: (state, action) => {\n      state.isLogined = true;\n      state.userInfo = action.payload;\n    },\n    userLogouted: (state, action) => {\n      state.isLogined = false;\n      state.userInfo = action.payload;\n    }\n  }\n});\nconst _loginSlice$actions = loginSlice.actions,\n      userLogined = _loginSlice$actions.userLogined,\n      userLogouted = _loginSlice$actions.userLogouted;\nexport { userLogined, userLogouted };\nexport const selectUser = state => state.user.isLogined;\nexport default loginSlice.reducer;","map":{"version":3,"sources":["C:\\workspace\\studying\\typescript\\mashup-todolist\\ui\\src\\redux\\features\\loginSlice.tsx"],"names":["createSlice","initialState","isLogined","status","userInfo","loginSlice","name","reducers","userLogined","state","action","payload","userLogouted","actions","selectUser","user","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AASA,MAAMC,YAAwB,GAAG;AAC7BC,EAAAA,SAAS,EAAE,KADkB;AAE7BC,EAAAA,MAAM,EAAE,MAFqB;AAG7BC,EAAAA,QAAQ,EAAE;AAHmB,CAAjC;AAYA,OAAO,MAAMC,UAAU,GAAGL,WAAW,CAAC;AAClCM,EAAAA,IAAI,EAAE,OAD4B;AAElCL,EAAAA,YAFkC;AAGlCM,EAAAA,QAAQ,EAAE;AACNC,IAAAA,WAAW,EAAE,CAACC,KAAD,EAAQC,MAAR,KAA6C;AACtDD,MAAAA,KAAK,CAACP,SAAN,GAAkB,IAAlB;AACAO,MAAAA,KAAK,CAACL,QAAN,GAAiBM,MAAM,CAACC,OAAxB;AACH,KAJK;AAKNC,IAAAA,YAAY,EAAE,CAACH,KAAD,EAAQC,MAAR,KAA6C;AACvDD,MAAAA,KAAK,CAACP,SAAN,GAAkB,KAAlB;AACAO,MAAAA,KAAK,CAACL,QAAN,GAAiBM,MAAM,CAACC,OAAxB;AACH;AARK;AAHwB,CAAD,CAA9B;4BAesCN,UAAU,CAACQ,O;MAAzCL,W,uBAAAA,W;MAAaI,Y,uBAAAA,Y;;AAE5B,OAAO,MAAME,UAAU,GAAIL,KAAD,IAAsBA,KAAK,CAACM,IAAN,CAAWb,SAApD;AACP,eAAeG,UAAU,CAACW,OAA1B","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from '../store';\r\n\r\nexport interface loginState {\r\n    isLogined: boolean;\r\n    userInfo?: iUserInfo;\r\n    status: 'idle' | 'loading' | 'failed';\r\n}\r\n\r\nconst initialState: loginState = {\r\n    isLogined: false,\r\n    status: 'idle',\r\n    userInfo: {}\r\n};\r\n\r\nexport interface iUserInfo {\r\n    id?: number;\r\n    userid?: string;\r\n    userpw?: string;\r\n}\r\n\r\nexport const loginSlice = createSlice({\r\n    name: 'login',\r\n    initialState,\r\n    reducers: {\r\n        userLogined: (state, action: PayloadAction<iUserInfo>) => {\r\n            state.isLogined = true;\r\n            state.userInfo = action.payload;\r\n        },\r\n        userLogouted: (state, action: PayloadAction<iUserInfo>) => {\r\n            state.isLogined = false;\r\n            state.userInfo = action.payload;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { userLogined, userLogouted } = loginSlice.actions;\r\n\r\nexport const selectUser = (state: RootState) => state.user.isLogined;\r\nexport default loginSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}