{"ast":null,"code":"import _slicedToArray from \"C:\\\\workspace\\\\studying\\\\typescript\\\\mashup-todolist\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"C:\\\\workspace\\\\studying\\\\typescript\\\\mashup-todolist\\\\ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\workspace\\\\studying\\\\typescript\\\\mashup-todolist\\\\ui\\\\src\\\\TodoContext.tsx\";\nimport React, { createContext, useReducer, useContext, useEffect, useState } from 'react';\nimport * as apiCaller from './util/apiCaller';\nconst TodoStateContext = createContext(null);\nconst TodoDispatchContext = createContext(null);\nconst TodoNextIdContext = createContext(null);\n\nfunction todoReducer(state, action) {\n  switch (action.type) {\n    case 'CREATE':\n      {\n        apiCaller.AddItems(action.todo);\n        return state.concat(action.todo);\n      }\n\n    case 'TOGGLE':\n      {\n        let id = state.filter(todo => todo.id === action.id);\n        apiCaller.ToggleItems(id[0]);\n        return state.map(todo => todo.id === action.id ? _objectSpread({}, todo, {\n          done: todo.done === 1 ? 0 : 1\n        }) : todo);\n      }\n\n    case 'REMOVE':\n      {\n        let id = state.filter(todo => todo.id === action.id);\n        apiCaller.DeleteItems(id[0]);\n        return state.filter(todo => todo.id !== action.id);\n      }\n\n    case 'REPLACE':\n      let arr = action.array;\n      return arr;\n\n    default:\n      return state;\n  }\n}\n\nconst initialTodos = [{\n  id: 1,\n  text: 'sample 1',\n  done: false\n}, {\n  id: 2,\n  text: 'sample 2',\n  done: true\n}];\nexport function TodoProvider({\n  children\n}) {\n  const _useReducer = useReducer(todoReducer, initialTodos),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  const _useState = useState(3),\n        _useState2 = _slicedToArray(_useState, 2),\n        nextId = _useState2[0],\n        setNextID = _useState2[1];\n\n  const initial = useEffect(() => {\n    let data;\n\n    async function getItems() {\n      data = await apiCaller.GetItems();\n      let nextID = data[data.length - 1].id;\n      setNextID(nextID + 1);\n      dispatch({\n        type: 'REPLACE',\n        array: data\n      });\n    }\n\n    getItems();\n  }, []);\n  return React.createElement(TodoStateContext.Provider, {\n    value: state,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(TodoDispatchContext.Provider, {\n    value: dispatch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(TodoNextIdContext.Provider, {\n    value: nextId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, children)));\n}\nexport function useTodoState() {\n  return useContext(TodoStateContext);\n}\nexport function useTodoDispatch() {\n  return useContext(TodoDispatchContext);\n}\nexport function useTodoNextId() {\n  return useContext(TodoNextIdContext);\n}","map":{"version":3,"sources":["C:\\workspace\\studying\\typescript\\mashup-todolist\\ui\\src\\TodoContext.tsx"],"names":["React","createContext","useReducer","useContext","useEffect","useState","apiCaller","TodoStateContext","TodoDispatchContext","TodoNextIdContext","todoReducer","state","action","type","AddItems","todo","concat","id","filter","ToggleItems","map","done","DeleteItems","arr","array","initialTodos","text","TodoProvider","children","dispatch","nextId","setNextID","initial","data","getItems","GetItems","nextID","length","useTodoState","useTodoDispatch","useTodoNextId"],"mappings":"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","sourcesContent":["import React, { createContext, useReducer, useContext, useEffect, useState } from 'react';\nimport * as apiCaller from './util/apiCaller';\n\nconst TodoStateContext = createContext(null);\nconst TodoDispatchContext = createContext(null);\nconst TodoNextIdContext = createContext(null);\n\nfunction todoReducer(state, action) {\n    switch (action.type) {\n        case 'CREATE': {\n            apiCaller.AddItems(action.todo);\n            return state.concat(action.todo);\n        }\n        case 'TOGGLE': {\n            let id = state.filter((todo) => todo.id === action.id);\n            apiCaller.ToggleItems(id[0]);\n            return state.map((todo) => (todo.id === action.id ? { ...todo, done: todo.done === 1 ? 0 : 1 } : todo));\n        }\n        case 'REMOVE': {\n            let id = state.filter((todo) => todo.id === action.id);\n            apiCaller.DeleteItems(id[0]);\n            return state.filter((todo) => todo.id !== action.id);\n        }\n        case 'REPLACE':\n            let arr = action.array\n            return arr;\n        default:\n            return state;\n    }\n}\n\nconst initialTodos = [\n    {\n        id: 1,\n        text: 'sample 1',\n        done: false,\n    },\n    {\n        id: 2,\n        text: 'sample 2',\n        done: true,\n    },\n];\n\nexport function TodoProvider({ children }) {\n    const [state, dispatch] = useReducer(todoReducer, initialTodos);\n    const [nextId, setNextID] = useState(3);\n    const initial = useEffect(() => {\n        let data;\n        async function getItems() {\n            data = await apiCaller.GetItems();\n            let nextID = data[data.length - 1].id;\n            setNextID(nextID + 1);\n            dispatch({\n                type: 'REPLACE',\n                array: data,\n            });\n        }\n        getItems();\n    }, []);\n\n    return (\n        <TodoStateContext.Provider value={state}>\n            <TodoDispatchContext.Provider value={dispatch}>\n                <TodoNextIdContext.Provider value={nextId}>{children}</TodoNextIdContext.Provider>\n            </TodoDispatchContext.Provider>\n        </TodoStateContext.Provider>\n    );\n}\n\nexport function useTodoState() {\n    return useContext(TodoStateContext);\n}\n\nexport function useTodoDispatch() {\n    return useContext(TodoDispatchContext);\n}\n\nexport function useTodoNextId() {\n    return useContext(TodoNextIdContext);\n}\n"]},"metadata":{},"sourceType":"module"}