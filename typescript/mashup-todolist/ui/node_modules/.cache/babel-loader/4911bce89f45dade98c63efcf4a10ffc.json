{"ast":null,"code":"import _slicedToArray from \"C:\\\\workspace\\\\studying\\\\typescript\\\\mashup-todolist\\\\ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"C:\\\\workspace\\\\studying\\\\typescript\\\\mashup-todolist\\\\ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\workspace\\\\studying\\\\typescript\\\\mashup-todolist\\\\ui\\\\src\\\\TodoContext.tsx\";\nimport React, { createContext, useReducer, useContext, useState, useEffect } from 'react';\nimport * as apiCaller from './util/apiCaller';\nconst TodoStateContext = createContext(null);\nconst TodoDispatchContext = createContext(null);\nconst TodoNextIdContext = createContext(null);\n\nfunction todoReducer(state, action) {\n  switch (action.type) {\n    case 'CREATE':\n      {\n        apiCaller.AddItems(action.todo);\n        return state.concat(action.todo);\n      }\n\n    case 'REPLACE':\n      return action.array;\n\n    case 'TOGGLE':\n      {\n        let id = state.filter(todo => todo.id === action.id);\n        apiCaller.ToggleItems(id[0]);\n        return state.map(todo => todo.id === action.id ? _objectSpread({}, todo, {\n          done: todo.done === 1 ? 0 : 1\n        }) : todo); // 기본: return state.map(todo => todo.id === action.id ? { ...todo, done: !todo.done } : todo);\n        // 원래: return state.map(todo => (todo.id === action.id ? { ...todo, done: todo.done === 1 ? 0 : 1 } : todo));\n      }\n\n    case 'REMOVE':\n      {\n        let id = state.filter(todo => todo.id === action.id);\n        apiCaller.DeleteItems(id[0]);\n        return state.filter(todo => todo.id !== action.id);\n      }\n\n    default:\n      return state;\n  }\n}\n\nconst initialTodos = [{\n  id: 1,\n  text: 'sample',\n  done: false\n}, {\n  id: 2,\n  text: 'page',\n  done: true\n}];\nexport function TodoProvider({\n  children\n}) {\n  const _useReducer = useReducer(todoReducer, initialTodos),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  const _useState = useState(3),\n        _useState2 = _slicedToArray(_useState, 2),\n        nextId = _useState2[0],\n        setNextID = _useState2[1];\n\n  useEffect(() => {\n    getItems();\n  }, []);\n  let data;\n\n  async function getItems() {\n    data = await apiCaller.GetItems();\n    let nextID = data[data.length - 1].id;\n    setNextID(nextID + 1);\n    dispatch({\n      type: 'REPLACE',\n      array: data\n    });\n  }\n\n  getItems();\n  return React.createElement(TodoStateContext.Provider, {\n    value: state,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(TodoDispatchContext.Provider, {\n    value: dispatch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(TodoNextIdContext.Provider, {\n    value: nextId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, children)));\n}\nexport function useTodoState() {\n  return useContext(TodoStateContext);\n}\nexport function useTodoDispatch() {\n  return useContext(TodoDispatchContext);\n}\nexport function useTodoNextId() {\n  return useContext(TodoNextIdContext);\n}","map":{"version":3,"sources":["C:\\workspace\\studying\\typescript\\mashup-todolist\\ui\\src\\TodoContext.tsx"],"names":["React","createContext","useReducer","useContext","useState","useEffect","apiCaller","TodoStateContext","TodoDispatchContext","TodoNextIdContext","todoReducer","state","action","type","AddItems","todo","concat","array","id","filter","ToggleItems","map","done","DeleteItems","initialTodos","text","TodoProvider","children","dispatch","nextId","setNextID","getItems","data","GetItems","nextID","length","useTodoState","useTodoDispatch","useTodoNextId"],"mappings":"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","sourcesContent":["import React, { createContext, useReducer, useContext, useState, useEffect } from 'react';\nimport * as apiCaller from './util/apiCaller';\n\nconst TodoStateContext = createContext(null);\nconst TodoDispatchContext = createContext(null);\nconst TodoNextIdContext = createContext(null);\n\nfunction todoReducer(state, action) {\n    switch (action.type) {\n        case 'CREATE': {\n            apiCaller.AddItems(action.todo);\n            return state.concat(action.todo);\n        }\n        case 'REPLACE':\n            return action.array;\n        case 'TOGGLE': {\n            let id = state.filter((todo) => todo.id === action.id);\n            apiCaller.ToggleItems(id[0]);\n            return state.map((todo) => (todo.id === action.id ? { ...todo, done: todo.done === 1 ? 0 : 1 } : todo));\n            // 기본: return state.map(todo => todo.id === action.id ? { ...todo, done: !todo.done } : todo);\n            // 원래: return state.map(todo => (todo.id === action.id ? { ...todo, done: todo.done === 1 ? 0 : 1 } : todo));\n        }\n        case 'REMOVE': {\n            let id = state.filter((todo) => todo.id === action.id);\n            apiCaller.DeleteItems(id[0]);\n            return state.filter((todo) => todo.id !== action.id);\n        }\n        default:\n            return state;\n    }\n}\n\nconst initialTodos = [\n    {\n        id: 1,\n        text: 'sample',\n        done: false,\n    },\n    {\n        id: 2,\n        text: 'page',\n        done: true,\n    },\n];\n\nexport function TodoProvider({ children }) {\n    const [state, dispatch] = useReducer(todoReducer, initialTodos);\n    const [nextId, setNextID] = useState(3);\n\n    useEffect(() => {\n        getItems();\n      }, []);\n\n    let data;\n    async function getItems() {\n        data = await apiCaller.GetItems();\n        let nextID = data[data.length - 1].id;\n        setNextID(nextID + 1);\n        dispatch({\n            type: 'REPLACE',\n            array: data,\n        });\n    }\n    getItems();\n\n    return (\n        <TodoStateContext.Provider value={state}>\n            <TodoDispatchContext.Provider value={dispatch}>\n                <TodoNextIdContext.Provider value={nextId}>{children}</TodoNextIdContext.Provider>\n            </TodoDispatchContext.Provider>\n        </TodoStateContext.Provider>\n    );\n}\n\nexport function useTodoState() {\n    return useContext(TodoStateContext);\n}\n\nexport function useTodoDispatch() {\n    return useContext(TodoDispatchContext);\n}\n\nexport function useTodoNextId() {\n    return useContext(TodoNextIdContext);\n}"]},"metadata":{},"sourceType":"module"}