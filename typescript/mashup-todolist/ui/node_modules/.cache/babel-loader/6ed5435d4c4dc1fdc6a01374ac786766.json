{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  isLogined: false,\n  status: 'idle'\n};\nexport const loginSlice = createSlice({\n  name: 'login',\n  initialState,\n  reducers: {\n    userLogined: (state, action) => {\n      state.isLogined = true;\n    },\n    userLogouted: (state, action) => {\n      state.isLogined = false;\n    }\n  }\n});\nconst _loginSlice$actions = loginSlice.actions,\n      userLogined = _loginSlice$actions.userLogined,\n      userLogouted = _loginSlice$actions.userLogouted;\nexport { userLogined, userLogouted };\nexport const selectAuth = state => state.user.isLogined;\nexport default loginSlice.reducer;","map":{"version":3,"sources":["C:\\workspace\\studying\\typescript\\mashup-todolist\\ui\\src\\redux\\features\\loginSlice.tsx"],"names":["createSlice","initialState","isLogined","status","loginSlice","name","reducers","userLogined","state","action","userLogouted","actions","selectAuth","user","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AASA,MAAMC,YAAwB,GAAG;AAC7BC,EAAAA,SAAS,EAAE,KADkB;AAE7BC,EAAAA,MAAM,EAAE;AAFqB,CAAjC;AAWA,OAAO,MAAMC,UAAU,GAAGJ,WAAW,CAAC;AAClCK,EAAAA,IAAI,EAAE,OAD4B;AAElCJ,EAAAA,YAFkC;AAGlCK,EAAAA,QAAQ,EAAE;AACNC,IAAAA,WAAW,EAAE,CAACC,KAAD,EAAQC,MAAR,KAA6C;AACtDD,MAAAA,KAAK,CAACN,SAAN,GAAkB,IAAlB;AACH,KAHK;AAINQ,IAAAA,YAAY,EAAE,CAACF,KAAD,EAAQC,MAAR,KAA6C;AACvDD,MAAAA,KAAK,CAACN,SAAN,GAAkB,KAAlB;AACH;AANK;AAHwB,CAAD,CAA9B;4BAasCE,UAAU,CAACO,O;MAAzCJ,W,uBAAAA,W;MAAaG,Y,uBAAAA,Y;;AAE5B,OAAO,MAAME,UAAU,GAAIJ,KAAD,IAAsBA,KAAK,CAACK,IAAN,CAAWX,SAApD;AACP,eAAeE,UAAU,CAACU,OAA1B","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from '../store';\r\n\r\nexport interface loginState {\r\n    isLogined: boolean;\r\n    userInfo?: iUserInfo;\r\n    status: 'idle' | 'loading' | 'failed';\r\n}\r\n\r\nconst initialState: loginState = {\r\n    isLogined: false,\r\n    status: 'idle',\r\n};\r\n\r\nexport interface iUserInfo {\r\n    id?: number;\r\n    userid?: string;\r\n    userpw?: string;\r\n}\r\n\r\nexport const loginSlice = createSlice({\r\n    name: 'login',\r\n    initialState,\r\n    reducers: {\r\n        userLogined: (state, action: PayloadAction<iUserInfo>) => {\r\n            state.isLogined = true;\r\n        },\r\n        userLogouted: (state, action: PayloadAction<iUserInfo>) => {\r\n            state.isLogined = false;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { userLogined, userLogouted } = loginSlice.actions;\r\n\r\nexport const selectAuth = (state: RootState) => state.user.isLogined;\r\nexport default loginSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}