{"version":3,"sources":["util/apiCaller.ts","TodoContext.tsx","components/login/TodoLoginTemplate.tsx","components/login/TodoLogin.tsx","pages/LoginPage.tsx","components/TodoTemplate.tsx","components/TodoHead.tsx","components/TodoItem.tsx","components/TodoList.tsx","components/TodoCreate.tsx","pages/MainPage.tsx","App.tsx","serviceWorker.tsx","index.tsx"],"names":["_callee","todo","regenerator_default","a","wrap","_context","prev","next","axios","post","text","abrupt","sent","t0","console","log","stop","GetItems","_GetItems","apply","this","arguments","_callee2","response","_context2","get","data","_callee3","_context3","put","id","done","_callee4","_context4","delete","TodoStateContext","createContext","TodoDispatchContext","TodoNextIdContext","todoReducer","state","action","type","_x","_AddItems","apiCaller","concat","_x2","_ToggleItems","filter","map","Object","objectSpread","_x3","_DeleteItems","array","initialTodos","TodoProvider","_ref","children","_useReducer","useReducer","_useReducer2","slicedToArray","dispatch","_useState","useState","_useState2","nextId","setNextID","useEffect","_getItems","asyncToGenerator","mark","nextID","length","getItems","react_default","createElement","Provider","value","useTodoState","useContext","useTodoDispatch","TodoLoginTemplate","styled","div","_templateObject","TodoTemplate","TodoHeadBlock","TodoLogin_templateObject","LoginButton","button","_templateObject2","InsertFormPositioner","_templateObject3","InsertId","form","_templateObject4","InsertPw","_templateObject5","Input","input","_templateObject6","React","memo","Fragment","placeholder","index_esm","LoginPage","login_TodoLoginTemplate","login_TodoLogin","TodoTemplateBlock","TodoTemplate_templateObject","TodoHead_templateObject","TasksLeft","TodoHead_templateObject2","TodoHead","today","Date","dateString","toLocaleString","year","month","day","dayName","weekday","undoneTasks","TodoHead_TodoHeadBlock","className","Remove","TodoItem_templateObject","TodoItemBlock","TodoItem_templateObject2","CheckCircle","TodoItem_templateObject3","props","css","TodoItem_templateObject4","Text","TodoItem_templateObject5","TodoItem_templateObject6","onClick","md_index_esm","TodoListBlock","TodoList_templateObject","TodoList","todos","components_TodoItem","key","CircleButton","TodoCreate_templateObject","open","TodoCreate_templateObject2","TodoCreate_templateObject3","InsertForm","TodoCreate_templateObject4","TodoCreate_templateObject5","setOpen","_useState3","_useState4","setValue","TodoCreate_InsertFormPositioner","onSubmit","e","preventDefault","current","TodoCreate_Input","autoFocus","onChange","target","MainPage","components_TodoTemplate","components_TodoHead","components_TodoList","components_TodoCreate","GlobalStyle","createGlobalStyle","App_templateObject","App","react_router_dom","react_router","path","element","pages_LoginPage","pages_MainPage","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.585345e4.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport async function AddItems(todo) {\r\n    try {\r\n        return await axios.post('/addItem', {\r\n            text: todo.text,\r\n        });\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nexport async function GetItems() {\r\n    try {\r\n        const response = await axios.get('/getItem', {});\r\n        return response.data;\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nexport async function ToggleItems(todo) {\r\n    try {\r\n        return await axios.put('/putItem', {\r\n            id: todo.id,\r\n            done: todo.done === 1 ? 0 : 1,\r\n        });\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nexport async function DeleteItems(todo) {\r\n    try {\r\n        return await axios.delete('/deleteItem', {\r\n            data: { id: todo.id },\r\n        });\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n","import React, { createContext, useReducer, useContext, useEffect, useState } from 'react';\nimport * as apiCaller from './util/apiCaller';\n\nconst TodoStateContext = createContext(null);\nconst TodoDispatchContext = createContext(null);\nconst TodoNextIdContext = createContext(null);\n\nfunction todoReducer(state, action) {\n    switch (action.type) {\n        case 'CREATE': {\n            apiCaller.AddItems(action.todo);\n            return state.concat(action.todo);\n        }\n        case 'TOGGLE': {\n            let id = state.filter(todo => todo.id === action.id);\n            apiCaller.ToggleItems(id[0]);\n            return state.map(todo => (todo.id === action.id ? { ...todo, done: todo.done === 1 ? 0 : 1 } : todo));\n            // 기본: return state.map(todo => todo.id === action.id ? { ...todo, done: !todo.done } : todo);\n            // 원래: return state.map(todo => (todo.id === action.id ? { ...todo, done: todo.done === 1 ? 0 : 1 } : todo));\n        }\n        case 'REMOVE': {\n            let id = state.filter((todo) => todo.id === action.id);\n            apiCaller.DeleteItems(id[0]);\n            return state.filter((todo) => todo.id !== action.id);\n        }\n        case 'REPLACE':\n            return action.array;\n        default:\n            return state;\n    }\n}\n\nconst initialTodos = [\n    {\n        id: 1,\n        text: 'sample',\n        done: false,\n    },\n    {\n        id: 2,\n        text: 'page',\n        done: true,\n    },\n];\n\nexport function TodoProvider({ children }) {\n    const [state, dispatch] = useReducer(todoReducer, initialTodos);\n    const [nextId, setNextID] = useState(3);\n    const initial = useEffect(() => {\n        let data;\n        async function getItems() {\n            data = await apiCaller.GetItems();\n            let nextID = data[data.length - 1].id;\n            setNextID(nextID + 1);\n            dispatch({\n                type: 'REPLACE',\n                array: data,\n            });\n        }\n        getItems();\n    }, []);\n\n    return (\n        <TodoStateContext.Provider value={state}>\n            <TodoDispatchContext.Provider value={dispatch}>\n                <TodoNextIdContext.Provider value={nextId}>{children}</TodoNextIdContext.Provider>\n            </TodoDispatchContext.Provider>\n        </TodoStateContext.Provider>\n    );\n}\n\nexport function useTodoState() {\n    return useContext(TodoStateContext);\n}\n\nexport function useTodoDispatch() {\n    return useContext(TodoDispatchContext);\n}\n\nexport function useTodoNextId() {\n    return useContext(TodoNextIdContext);\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst TodoLoginTemplate = styled.div`\n  width: 512px;\n  height: 624px;\n\n  position: relative;\n  background: white;\n  border-radius: 16px;\n  box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.04);\n  margin: 0 auto;\n  margin-top: 96px;\n  margin-bottom: 32px;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n`;\n\nfunction TodoTemplate({ children }) {\n  return <TodoLoginTemplate>{children}</TodoLoginTemplate>;\n}\n\nexport default TodoTemplate;\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { IoMdLogIn } from 'react-icons/io'\r\n\r\nconst TodoHeadBlock = styled.div`\r\n    h1 {\r\n        margin: 0;\r\n        font-size: 36px;\r\n        color: #343a40;\r\n        text-align: center;\r\n    }\r\n    padding-top: 30px;\r\n    padding-left: 32px;\r\n    padding-right: 32px;\r\n    padding-bottom: 30px;\r\n    border-bottom: 1px solid #e9ecef;\r\n`;\r\n\r\nconst LoginButton = styled.button`\r\n    background: #3866d9;\r\n    &:hover {\r\n        background: #6382e6;\r\n    }\r\n    &:active {\r\n        background: #2050c9;\r\n    }\r\n\r\n    z-index: 5;\r\n    cursor: pointer;\r\n    width: 80px;\r\n    height: 80px;\r\n    display: block;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 60px;\r\n    position: absolute;\r\n    left: 50%;\r\n    bottom: 0px;\r\n    transform: translate(-50%, 50%);\r\n    color: white;\r\n    border-radius: 50%;\r\n    border: none;\r\n    outline: none;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    transition: 0.125s all ease-in;\r\n`;\r\n\r\nconst InsertFormPositioner = styled.div`\r\n    h2 {\r\n      margin: 0;\r\n      padding-left: 45px;\r\n      padding-right: 32px;\r\n      font-size: 30px;\r\n      color: #343a40;\r\n    }\r\n    width: 100%;\r\n    bottom: 0;\r\n    left: 0;\r\n    position: absolute;\r\n`;\r\n\r\nconst InsertId = styled.form`\r\n    padding-left: 32px;\r\n    padding-top: 15px;\r\n    padding-right: 32px;\r\n    padding-bottom: 70px;\r\n\r\n    border-bottom-left-radius: 16px;\r\n    border-bottom-right-radius: 16px;\r\n`;\r\n\r\nconst InsertPw = styled.form`\r\n    padding-left: 32px;\r\n    padding-top: 15px;\r\n    padding-right: 32px;\r\n    padding-bottom: 170px;\r\n\r\n    border-bottom-left-radius: 16px;\r\n    border-bottom-right-radius: 16px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    padding: 12px;\r\n    border-radius: 4px;\r\n    border: 1px solid #dee2e6;\r\n    width: 100%;\r\n    outline: none;\r\n    font-size: 18px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nfunction TodoLogin() {\r\n    return (\r\n        <>\r\n            <TodoHeadBlock>\r\n                <h1>Login</h1>\r\n            </TodoHeadBlock>\r\n            <InsertFormPositioner>\r\n                <h2>Id</h2>\r\n                <InsertId>\r\n                    <Input placeholder=\"Id\"></Input>\r\n                </InsertId>\r\n                <h2>Password</h2>\r\n                <InsertPw>\r\n                    <Input placeholder=\"Password\"></Input>\r\n                </InsertPw>\r\n            </InsertFormPositioner>\r\n            <LoginButton>\r\n                <IoMdLogIn />\r\n            </LoginButton>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default React.memo(TodoLogin);\r\n","import React from 'react';\r\nimport TodoLoginTemplate from '../components/login/TodoLoginTemplate';\r\nimport TodoLogin from '../components/login/TodoLogin';\r\n\r\nfunction LoginPage() {\r\n    return (\r\n        <TodoLoginTemplate>\r\n            <TodoLogin />\r\n        </TodoLoginTemplate>\r\n    );\r\n}\r\n\r\nexport default LoginPage;\r\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst TodoTemplateBlock = styled.div`\n  width: 512px;\n  height: 768px;\n\n  position: relative;\n  background: white;\n  border-radius: 16px;\n  box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.04);\n  margin: 0 auto;\n  margin-top: 96px;\n  margin-bottom: 32px;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n`;\n\nfunction TodoTemplate({ children }) {\n  return <TodoTemplateBlock>{children}</TodoTemplateBlock>;\n}\n\nexport default TodoTemplate;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useTodoState } from '../TodoContext';\n\nconst TodoHeadBlock = styled.div`\n  h1 {\n    margin: 0;\n    font-size: 36px;\n    color: #343a40;\n  }\n  .day {\n    margin-top: 4px;\n    color: #868e96;\n    font-size: 21px;\n  }\n  padding-top: 48px;\n  padding-left: 32px;\n  padding-right: 32px;\n  padding-bottom: 24px;\n  border-bottom: 1px solid #e9ecef;\n`;\n\nconst TasksLeft = styled.div`\n  color: #2050c9;\n  font-size: 18px;\n  margin-top: 40px;\n  font-weight: bold;\n`;\n\nfunction TodoHead() {\n  const today = new Date();\n\n  const dateString = today.toLocaleString('ko-KR', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  });\n\n  const dayName = today.toLocaleString('ko-KR', { weekday: 'long' });\n  const todos = useTodoState();\n  const undoneTasks = todos.filter(todo => !todo.done);\n\n  return (\n    <TodoHeadBlock>\n      <h1>{dateString}</h1>\n      <div className=\"day\">{dayName}</div>\n      <TasksLeft>할 일 {undoneTasks.length}개 남음</TasksLeft>\n    </TodoHeadBlock>\n  );\n}\n\nexport default TodoHead;\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { MdDone, MdDelete } from \"react-icons/md\";\nimport { useTodoDispatch } from \"../TodoContext\";\n\nconst Remove = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #dee2e6;\n  font-size: 24px;\n  cursor: pointer;\n  &:hover {\n    color: #ff6b6b;\n  }\n  display: none;\n`;\n\nconst TodoItemBlock = styled.div`\n  display: flex;\n  align-items: center;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  &:hover {\n    ${Remove} {\n      display: initial;\n    }\n  }\n`;\n\ninterface ICheckCircle {\n  done: boolean;\n}\nconst CheckCircle = styled.div`\n  width: 32px;\n  height: 32px;\n  border-radius: 16px;\n  border: 1px solid #ced4da;\n  font-size: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 20px;\n  cursor: pointer;\n  ${(props: ICheckCircle) =>\n    props.done &&\n    css`\n      border: 1px solid #3866d9;\n      color: #3866d9;\n    `}\n`;\n\ninterface IText {\n  done: boolean;\n}\nconst Text = styled.div`\n  flex: 1;\n  font-size: 21px;\n  color: #495057;\n  ${(props: IText) =>\n    props.done &&\n    css`\n      color: #ced4da;\n    `}\n`;\n\nfunction TodoItem({ id, done, text }) {\n  const dispatch = useTodoDispatch();\n\n  const onToggle = () => {\n    dispatch({\n      type: \"TOGGLE\",\n      id,\n    });\n  };\n\n  const onRemove = () => {\n    dispatch({\n      type: \"REMOVE\",\n      id,\n    });\n  };\n\n  return (\n    <TodoItemBlock>\n      <CheckCircle done={done} onClick={onToggle}>\n        {done === 1 && <MdDone />} \n      </CheckCircle>\n      <Text done={done}>{text}</Text>\n      <Remove onClick={onRemove}>\n        <MdDelete />\n      </Remove>\n    </TodoItemBlock>\n  );\n}\n\nexport default React.memo(TodoItem);\n","import React from 'react';\nimport styled from 'styled-components';\nimport TodoItem from './TodoItem';\nimport { useTodoState } from '../TodoContext';\n\nconst TodoListBlock = styled.div`\n  flex: 1;\n  padding: 20px 32px;\n  padding-bottom: 48px;\n  overflow-y: auto;\n`;\n\nfunction TodoList() {\n  const todos = useTodoState();\n  return (\n    <TodoListBlock>\n      {todos.map(todo => (\n        <TodoItem\n          id={todo.id}\n          text={todo.text}\n          done={todo.done}\n          key={todo.id}\n        />\n      ))}\n    </TodoListBlock>\n  );\n}\n\nexport default TodoList;\n","import React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { MdAdd } from 'react-icons/md';\nimport { useTodoDispatch, useTodoNextId } from '../TodoContext';\n\ninterface iCircleButton {\n    open: boolean;\n}\n\nconst CircleButton = styled.button<iCircleButton>`\n    background: #3866d9;\n    &:hover {\n        background: #6382e6; \n    }\n    &:active {\n        background: #2050c9; \n    }\n\n    z-index: 5;\n    cursor: pointer;\n    width: 80px;\n    height: 80px;\n    display: block;\n    align-items: center;\n    justify-content: center;\n    font-size: 60px;\n    position: absolute;\n    left: 50%;\n    bottom: 0px;\n    transform: translate(-50%, 50%);\n    color: white;\n    border-radius: 50%;\n    border: none;\n    outline: none;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    transition: 0.125s all ease-in;\n    ${(props) =>\n        props.open &&\n        css`\n            background: #ff6b6b;\n            &:hover {\n                background: #ff8787;\n            }\n            &:active {\n                background: #fa5252;\n            }\n            transform: translate(-50%, 50%) rotate(45deg);\n        `}\n`;\n\nconst InsertFormPositioner = styled.div`\n    width: 100%;\n    bottom: 0;\n    left: 0;\n    position: absolute;\n`;\n\nconst InsertForm = styled.form`\n    background: #f8f9fa;\n    padding-left: 32px;\n    padding-top: 32px;\n    padding-right: 32px;\n    padding-bottom: 72px;\n\n    border-bottom-left-radius: 16px;\n    border-bottom-right-radius: 16px;\n    border-top: 1px solid #e9ecef;\n`;\n\nconst Input = styled.input`\n    padding: 12px;\n    border-radius: 4px;\n    border: 1px solid #dee2e6;\n    width: 100%;\n    outline: none;\n    font-size: 18px;\n    box-sizing: border-box;\n`;\n\nfunction TodoCreate() {\n    const [open, setOpen] = useState(false);\n    const [value, setValue] = useState('');\n    const dispatch = useTodoDispatch();\n    const nextId: any = useTodoNextId();\n\n    const onToggle = () => setOpen(!open);\n    const onChange = e => setValue(e.target.value);\n    const onSubmit = e => {\n        e.preventDefault();\n        dispatch({\n            type: 'CREATE',\n            todo: {\n                id: nextId ? nextId : nextId.current,\n                text: value,\n                done: false,\n            },\n        });\n        setOpen(false);\n        setValue('');\n    };\n\n    return (\n        <>\n            {open && (\n                <InsertFormPositioner>\n                    <InsertForm onSubmit={onSubmit}>\n                        <Input\n                            autoFocus\n                            onChange={onChange}\n                            value={value}\n                            placeholder=\"할 일을 입력 후, Enter 를 누르세요\"\n                        />\n                    </InsertForm>\n                </InsertFormPositioner>\n            )}\n            <CircleButton onClick={onToggle} open={open}>\n                <MdAdd />\n            </CircleButton>\n        </>\n    );\n}\n\nexport default React.memo(TodoCreate);\n","import React from 'react';\r\nimport TodoTemplate from '../components/TodoTemplate';\r\nimport TodoHead from '../components/TodoHead';\r\nimport TodoList from '../components/TodoList';\r\nimport TodoCreate from '../components/TodoCreate';\r\n\r\nfunction MainPage() {\r\n    return (\r\n        <TodoTemplate>\r\n            <TodoHead />\r\n            <TodoList />\r\n            <TodoCreate />\r\n        </TodoTemplate>\r\n    );\r\n}\r\n\r\nexport default MainPage;\r\n","import React from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { TodoProvider } from './TodoContext';\n\nimport LoginPage from './pages/LoginPage';\nimport MainPage from './pages/MainPage';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background: #e9ecef\n  }\n`;\nfunction App() {\n    return (\n        <TodoProvider>\n            <GlobalStyle />\n            <BrowserRouter>\n                <Routes>\n                    <Route path=\"/login\" element={<LoginPage />} />\n                    <Route path=\"/\" element={<MainPage />} />\n                </Routes>\n            </BrowserRouter>\n        </TodoProvider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}